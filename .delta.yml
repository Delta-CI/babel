jobs:
  test-coverage:
    docker: deltacidocker/node:14
    # machine: *power_horse
    steps:
      - name: install node 15
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          \. "$NVM_DIR/nvm.sh"
          nvm install 15
          npm i -g yarn
      - name: Generate coverage report
        run: |
          make -j test-ci-coverage
          yarn test:esm
      - name: Upload coverage report
        run: echo "Uploading.. Lol" && sleep 2

  build:
    docker: deltacidocker/node:14
    env:
      YARN_NODE_LINKER: pnp # use pnp linker for better linking performance and stricter checks
      BABEL_8_BREAKING: false
      STRIP_BABEL_8_FLAG: true
    steps:
      - name: Build babel artifacts
        run: |
          BABEL_ENV=test-legacy make -j build-standalone-ci
      - name: Copy artifacts
        run: |
          mkdir -p /__ci/workflow_shared/babel-artifacts
          ls codemods eslint packages
          cp -r --parents codemods/*/lib {eslint,packages}/*/lib packages/babel-standalone/*.js /__ci/workflow_shared/babel-artifacts

  lint:
    after:
      - build
    docker: deltacidocker/node:14
    steps:
      - name: Install
        run: yarn install
      - name: restore artifacts
        run: |
          cp --verbose -a /__ci/workflow_shared/babel-artifacts/* .
      - name: Lint
        run: make -j tscheck flowcheck-ci lint-ci

  test-6:
    docker: deltacidocker/node:14
    after:
      - build
    steps:
      - name: Install
        run: yarn install
      - name: Downgrade Jest for node <= 8
        run: |
          yarn remove jest
          yarn add --dev jest@24
          # Pin stack-utils to 1.0.2 https://github.com/tapjs/stack-utils/issues/56
          yarn set resolution stack-utils@npm:^1.0.1 1.0.2
      - name: restore artifacts
        run: |
          cp --verbose -a /__ci/workflow_shared/babel-artifacts/* .
      - name: Generate runtime helpers
        run: |
          make build-plugin-transform-runtime-dist
      - name: Test on node.js 6
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          \. "$NVM_DIR/nvm.sh"
          nvm install 6
          npm i -g yarn
          BABEL_ENV=test node ./node_modules/.bin/jest --ci --color

  test-8:
    docker: deltacidocker/node:14
    after:
      - build
    steps:
      - name: Install
        run: yarn install
      - name: Downgrade Jest for node <= 8
        run: |
          yarn remove jest
          yarn add --dev jest@24
          # Pin stack-utils to 1.0.2 https://github.com/tapjs/stack-utils/issues/56
          yarn set resolution stack-utils@npm:^1.0.1 1.0.2
      - name: restore artifacts
        run: |
          cp --verbose -a /__ci/workflow_shared/babel-artifacts/* .
      - name: Generate runtime helpers
        run: |
          make build-plugin-transform-runtime-dist
      - name: Test on node.js 8
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          \. "$NVM_DIR/nvm.sh"
          nvm install 8
          npm i -g yarn
          BABEL_ENV=test node ./node_modules/.bin/jest --ci --color

  test-10:
    after:
      - build
    docker: deltacidocker/node:10
    steps:
      - name: Install
        run: yarn install
      - name: restore artifacts
        run: |
          cp --verbose -a /__ci/workflow_shared/babel-artifacts/* .
      - name: Generate runtime helpers
        run: |
          make build-plugin-transform-runtime-dist
      - name: Test on node.js 10
        run: |
          BABEL_ENV=test node ./node_modules/.bin/jest --ci --color
  test-12:
    after:
      - build
    docker: deltacidocker/node:12
    steps:
      - name: Install
        run: yarn install
      - name: restore artifacts
        run: |
          cp --verbose -a /__ci/workflow_shared/babel-artifacts/* .
      - name: Generate runtime helpers
        run: |
          make build-plugin-transform-runtime-dist
      - name: Test on node.js 12
        run: |
          BABEL_ENV=test node ./node_modules/.bin/jest --ci --color
  test-14:
    after:
      - build
    docker: deltacidocker/node:14
    steps:
      - name: Install
        run: yarn install
      - name: restore artifacts
        run: |
          cp --verbose -a /__ci/workflow_shared/babel-artifacts/* .
      - name: Generate runtime helpers
        run: |
          make build-plugin-transform-runtime-dist
      - name: Test on node.js 14
        run: |
          BABEL_ENV=test node ./node_modules/.bin/jest --ci --color

  test-babel-8-breaking:
    name: Test Babel 8 breaking changes
    runs-on: ubuntu-latest
    env:
      BABEL_ENV: test
      BABEL_8_BREAKING: true
      STRIP_BABEL_8_FLAG: true
    docker: deltacidocker/node:12
    steps:
      - name: Install and build
        run: make -j bootstrap
      - name: Test
        # Hack: --color has supports-color@5 returned true for GitHub CI
        # Remove once `chalk` is bumped to 4.0.
        run: |
          yarn jest --ci --color
          yarn test:esm

  # test-windows: unsupported

  external-parser-tests:
    after:
      - build
    docker: deltacidocker/node:12
    steps:
      - name: Install
        run: yarn install
      - name: restore artifacts
        run: |
          cp --verbose -a /__ci/workflow_shared/babel-artifacts/* .
      - name: Download tests
        run: make -j bootstrap-flow bootstrap-typescript bootstrap-test262
      - name: Run Test262 Tests
        run: make test-test262
      - name: Run Flow Tests
        run: make test-flow
      - name: Run TypeScript Tests
        run: make test-typescript
